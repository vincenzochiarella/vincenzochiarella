{"version":3,"sources":["pages/layout/Footer.tsx","resources/Bg_home.jpg","pages/Home.jsx","App.tsx","reportWebVitals.ts","fonts/aqua.ttf","fonts/importFont.tsx","index.tsx"],"names":["Footer","props","id","IconButton","href","Instagram","fontSize","LinkedIn","Mail","GitHub","Home","cvRef","React","useRef","photoRef","txtRef","vinsRef","bgRef","footerRef","useEffect","anime","targets","current","opacity","translateX","duration","easing","translateY","scale","Box","ref","style","backgroundImage","bg","backgroundPosition","backgroundBlendMode","backgroundSize","backgroundRepeat","overflow","Container","maxWidth","width","height","display","m","Grid","container","direction","align","justify","margin","item","lg","md","xs","Typography","variant","Dev","lazy","Photo","App","Suspense","fallback","CircularProgress","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","aqua","fontFamily","fontStyle","fontWeight","src","AquaWeb","unicodeRange","thm","createMuiTheme","typography","join","overrides","MuiCssBaseline","acquaWeb","ReactDOM","StrictMode","ThemeProvider","theme","CssBaseline","document","getElementById"],"mappings":"2TAwBeA,MAnBf,SAAiBC,GAEb,OACI,sBAAKC,GAAG,KAAR,UACI,cAACC,EAAA,EAAD,CAAYC,KAAK,4CAAjB,SACI,cAACC,EAAA,EAAD,CAAWC,SAAS,YAExB,cAACH,EAAA,EAAD,CAAYC,KAAK,2DAAjB,SACI,cAACG,EAAA,EAAD,CAAUD,SAAS,YAEvB,cAACH,EAAA,EAAD,CAAYC,KAAK,8BAAjB,SACI,cAACI,EAAA,EAAD,CAAMF,SAAS,YAEnB,cAACH,EAAA,EAAD,CAAYC,KAAK,uCAAjB,SACI,cAACK,EAAA,EAAD,CAAQH,SAAS,gB,QCnBlB,MAA0B,oCCmQ1BI,MA/Of,WACI,IAAMC,EAAQC,IAAMC,SACdC,EAAWF,IAAMC,SACjBE,EAASH,IAAMC,SACfG,EAAUJ,IAAMC,SAChBI,EAAQL,IAAMC,SACdK,EAAYN,IAAMC,SAuDxB,OAnDAM,qBAAU,WACNC,YAAM,CACFC,QAASV,EAAMW,QACfC,QAAS,CAAC,EAAG,GACbC,WAAY,EAAE,IAAK,GACnBC,SAAU,IACVC,OAAQ,mBAEZN,YAAM,CACFC,QAASP,EAASQ,QAClBC,QAAS,CAAC,EAAG,GACbC,WAAY,CAAC,IAAK,GAClBC,SAAU,IACVC,OAAQ,mBAEZN,YAAM,CACFC,QAASN,EAAOO,QAChBC,QAAS,CAAC,EAAG,GACbI,WAAY,CAAC,IAAK,GAClBF,SAAU,IACVC,OAAQ,kBAEZN,YAAM,CACFC,QAASL,EAAQM,QACjBC,QAAS,CAAC,EAAG,GACbI,WAAY,EAAE,IAAK,GACnBF,SAAU,IACVC,OAAQ,kBAEZN,YAAM,CACFC,QAASJ,EAAMK,QACfG,SAAU,IACVF,QAAS,CAAC,EAAE,GACZG,OAAQ,gBAEZN,YAAM,CACFC,QAASJ,EAAMK,QACfG,SAAU,IACVG,MAAO,CAAC,IAAI,GACZF,OAAQ,iBASV,IAIF,cAACG,EAAA,EAAD,CAAKC,IAAKb,EACNc,MAAO,CACHC,gBAAiB,OAASC,EAAK,IAC/BC,mBAAoB,SACpBC,oBAAqB,SACrBC,eAAgB,QAChBC,iBAAkB,YAClBC,SAAU,UAPlB,SAUI,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SAkDI,cAACX,EAAA,EAAD,CACIY,MAAO,OACPC,OAAQ,QACRC,QAAQ,OAHZ,SAKI,cAACd,EAAA,EAAD,CAAKe,EAAE,OAAP,SACI,eAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,MAAM,SACNC,QAAQ,SACRC,OAAO,OALX,UAOI,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/B,SACI,cAACzB,EAAA,EAAD,CACIC,IAAKd,EADT,SAGI,cAACuC,EAAA,EAAD,CACIP,MAAM,SACNQ,QAAQ,KAFZ,oCAoER,cAACX,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/B,SACI,cAACC,EAAA,EAAD,CACIzB,IAAKf,EACLiC,MAAM,SACNQ,QAAQ,KAHZ,2BAQJ,cAACX,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/B,SACI,cAACC,EAAA,EAAD,CACIzB,IAAKf,EACLiC,MAAM,SACNQ,QAAQ,YAHZ,gEAUJ,cAACX,EAAA,EAAD,CAAMf,IAAKZ,EAAWiC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/C,SACI,cAAC,EAAD,kBClP1BG,G,MAAM7C,IAAM8C,MAAK,kBAAM,iCAGvBC,EAAQ/C,IAAM8C,MAAK,kBAAM,gCAgBhBE,MAdf,WACE,OACE,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAACC,EAAA,EAAD,IAA1B,SACE,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,OACpC,cAAC,IAAD,CAAOD,KAAK,OAAOC,OAAQ,kBAAM,cAACT,EAAD,OACjC,cAAC,IAAD,CAAOQ,KAAK,SAASC,OAAQ,kBAAM,cAACP,EAAD,aCJ9BQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCTC,MAA0B,iCCezBQ,EAZH,CACXC,WAAY,UACZC,UAAW,YAEXC,WAAY,MACZC,IAAI,oCAAD,OAEKC,EAFL,4BAIHC,aACE,sJCFEC,EAAMC,YAAe,CACzBC,WAAY,CACVR,WAAY,CAAC,WAAWS,KAAK,MAE/BC,UAAW,CACTC,eAAgB,CACd,UAAW,CACT,aAAc,CAACC,QAMvBC,IAASxB,OACP,cAAC,IAAMyB,WAAP,UACE,eAACC,EAAA,EAAD,CAAeC,MAAOV,EAAtB,UACE,cAACW,EAAA,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1B7B,M","file":"static/js/main.3b31fe99.chunk.js","sourcesContent":["import { IconButton } from '@material-ui/core'\r\nimport { GitHub, Instagram, LinkedIn, Mail } from '@material-ui/icons'\r\n// import React from 'react'\r\n\r\n\r\nfunction Footer( props: any ){\r\n    // const [ themeSelector, setTheme ] = useState(false);\r\n    return (\r\n        <div id='ff'>\r\n            <IconButton href='https://www.instagram.com/vince_chiarella'>\r\n                <Instagram fontSize='large' />\r\n                </IconButton>                \r\n            <IconButton href='https://www.linkedin.com/in/vincenzo-chiarella-0528131a2'>\r\n                <LinkedIn fontSize='large' />\r\n                </IconButton>              \r\n            <IconButton href='MAILTO:vins14nov@outlook.it'>\r\n                <Mail fontSize='large' />\r\n            </IconButton>\r\n            <IconButton href='https://github.com/vincenzochiarella'>\r\n                <GitHub fontSize='large' />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer","export default __webpack_public_path__ + \"static/media/Bg_home.4fdcf175.jpg\";","import React from 'react'\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\n// import { DEV , FOTOGRAFIA} from '../consts/routes'\r\n\r\nimport { Box, Button, Grid, Typography, Container } from \"@material-ui/core\"\r\nimport Footer  from './layout/Footer'\r\n// import { ImageBackground } from 'react'\r\n\r\n// import { NavigateNext, NavigateBefore } from '@material-ui/icons'\r\nimport { useEffect } from \"react\"\r\n\r\nimport anime from 'animejs'\r\nimport bg from '../resources/Bg_home.jpg'\r\n// import MovingFadeLetter from './layout/MovingFadedText';\r\n\r\n\r\n// const bg = React.lazy(() => require('../resources/Bg_home.jpg'));\r\n\r\n\r\nfunction Home (){\r\n    const cvRef = React.useRef()\r\n    const photoRef = React.useRef()\r\n    const txtRef = React.useRef()\r\n    const vinsRef = React.useRef()\r\n    const bgRef = React.useRef()\r\n    const footerRef = React.useRef()\r\n\r\n    // const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        anime({\r\n            targets: cvRef.current,\r\n            opacity: [0, 1],\r\n            translateX: [-100, 0],\r\n            duration: 2000,\r\n            easing: \"easeInOutCubic\"\r\n        })\r\n        anime({\r\n            targets: photoRef.current,\r\n            opacity: [0, 1],\r\n            translateX: [100, 0],\r\n            duration: 2000,\r\n            easing: \"easeInOutCubic\"\r\n        })\r\n        anime({\r\n            targets: txtRef.current,\r\n            opacity: [0, 1],\r\n            translateY: [100, 0],\r\n            duration: 3000,\r\n            easing: \"easeInOutSine\"\r\n        })\r\n        anime({\r\n            targets: vinsRef.current,\r\n            opacity: [0, 1],\r\n            translateY: [-300, 0],\r\n            duration: 2000,\r\n            easing: \"easeInOutSine\"\r\n        })\r\n        anime({\r\n            targets: bgRef.current,\r\n            duration: 1000,\r\n            opacity: [0,1],\r\n            easing: 'easeOutSine'\r\n        })\r\n        anime({\r\n            targets: bgRef.current,\r\n            duration: 2000,\r\n            scale: [1.3,1],\r\n            easing: 'easeInSine'\r\n        })\r\n        // anime({\r\n        //     targets: [ bgRef.current ],\r\n        //     duration: 2000,\r\n        //     scale: [1.5,1],\r\n        //     easing: 'easeInOutQuad'\r\n        // })\r\n\r\n        },[])//Squared parentesis to load once\r\n    // const [touchStart, setTouchStart] = React.useState();\r\n    // var [touchDirection, setTouchEnd] = React.useState();\r\n    return (\r\n        <Box ref={bgRef}\r\n            style={{\r\n                backgroundImage: 'url(' + bg + ')',\r\n                backgroundPosition: 'center',\r\n                backgroundBlendMode: 'darken',\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat',\r\n                overflow: 'hidden'\r\n            }}\r\n        >\r\n            <Container maxWidth=\"md\" \r\n                // onTouchStart={tE => setTouchStart(tE.targetTouches[0].clientX)}\r\n                // onTouchMove={tM => setTouchEnd(tM.targetTouches[0].clientX)}\r\n                // onTouchEnd={() => {\r\n                //     console.log(\"TM \"+ touchDirection)\r\n                //     console.log(\"S \"+ touchStart)\r\n                //     setTouchStart(touchDirection -1)\r\n                //     console.log(\"S1 \"+ touchDirection)\r\n                // }}\r\n                    // if (touchStart - touchEnd > 150) {\r\n                    //     // do your stuff here for left swipe\r\n                    //     console.log('Swipe a sinistra')\r\n                    //     anime({\r\n                    //         targets: [ bgRef.current ], \r\n                    //         duration: 3000,\r\n                    //         translateX: '-100em',\r\n                    //         delay: 300,\r\n                    //         update: function(anim){\r\n                    //             vinsRef.current.style.filter = 'blur(' + 20 * anim.progress / 100 + 'px)'\r\n                    //             txtRef.current.style.filter = 'blur(' + 30 * anim.progress / 100 + 'px)'\r\n                    //         },\r\n                    //         complete: (a) =>{   \r\n                    //             history.push(FOTOGRAFIA)\r\n                    //         }\r\n                            \r\n                    //     })\r\n                        \r\n                    // }\r\n\r\n                //     // if (touchStart - touchEnd < -150) {\r\n                //         // do your stuff here for right swipe\r\n                //         console.log('Swipe a destra')\r\n                //         anime({\r\n                //             targets: [ bgRef.current ], \r\n                //             duration: 3000,\r\n                //             translateX: '100em',\r\n                //             delay: 300,\r\n                //             update: function(anim){\r\n                //                 vinsRef.current.style.filter = 'blur(' + 20 * anim.progress / 100 + 'px)'\r\n                //                 txtRef.current.style.filter = 'blur(' + 30 * anim.progress / 100 + 'px)'\r\n                //             },\r\n                //             complete: (a) =>{   \r\n                //                 history.push(DEV)\r\n                //             }\r\n                            \r\n                //         })                   \r\n                        \r\n                //     }\r\n                // }}\r\n                >\r\n                <Box\r\n                    width={'100%'}\r\n                    height={'100vh'}\r\n                    display='flex'\r\n                    >\r\n                    <Box m=\"auto\">\r\n                        <Grid\r\n                            container\r\n                            direction='row'\r\n                            align='center'\r\n                            justify='center'\r\n                            margin='auto'\r\n                        >\r\n                            <Grid item lg={12} md={12} xs={12}>\r\n                                <Box\r\n                                    ref={vinsRef}\r\n                                >\r\n                                    <Typography\r\n                                        align='center'\r\n                                        variant=\"h3\"\r\n                                    >\r\n                                        Vincenzo Chiarella\r\n                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                            {/* <Grid item lg={6} md={6} xs={6}>\r\n                                <Button\r\n                                    onMouseOver={e => {\r\n                                        anime({\r\n                                            targets: e.currentTarget,\r\n                                            scale: {\r\n                                                value: 1.5,\r\n                                                delay: 100,\r\n                                                duration: 2000\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    onMouseOut={e => {\r\n                                        anime({\r\n                                            targets: e.currentTarget,\r\n                                            scale: {\r\n                                                value: 1,\r\n                                                delay: 100,\r\n                                                duration: 2000\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    startIcon={<NavigateBefore style={{ fontSize: '3em' }} />}\r\n                                    ref={cvRef} >CV</Button>\r\n                            </Grid>\r\n                            <Grid item lg={6} md={6} xs={6} >\r\n                                <Button\r\n                                    onMouseOver={e => {\r\n                                        anime({\r\n                                            targets: e.currentTarget,\r\n                                            scale: {\r\n                                                value: 1.5,\r\n                                                delay: 100,\r\n                                                duration: 2000\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    onMouseOut={e => {\r\n                                        anime({\r\n                                            targets: e.currentTarget,\r\n                                            scale: {\r\n                                                value: 1,\r\n                                                delay: 100,\r\n                                                duration: 2000\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                    onClick={e => {\r\n                                        anime({\r\n                                            targets: [cvRef.current, photoRef.current, txtRef.current]\r\n\r\n                                        })\r\n                                    }}\r\n\r\n                                    endIcon={<NavigateNext style={{ fontSize: '3em' }}\r\n\r\n\r\n                                    />}\r\n                                    ref={photoRef} >Foto</Button>\r\n                            </Grid> */}\r\n                            <Grid item lg={12} md={12} xs={12}>\r\n                                <Typography\r\n                                    ref={txtRef}\r\n                                    align='center'\r\n                                    variant=\"h5\">\r\n                                    {/* fai swipe o clicca */}\r\n                                    coming soon\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item lg={12} md={12} xs={12}>\r\n                                <Typography\r\n                                    ref={txtRef}\r\n                                    align='center' \r\n                                    variant=\"subtitle2\">\r\n                                    {/* fai swipe o clicca */}\r\n                                    {/* <MovingFadeLetter> */}\r\n                                        Software Dev, student and sometimes photographer\r\n                                    {/* </MovingFadeLetter> */}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid ref={footerRef} item lg={12} md={12} xs={12}>\r\n                                <Footer />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n\r\n            </Container>\r\n        </Box>\r\n    )\r\n\r\n}\r\nexport default Home","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport Home from './pages/Home';\r\nimport './App.css'\r\n\r\nconst Dev = React.lazy(() => import('./pages/dev/Sviluppatore'));\r\n// const Home = React.lazy(() => import('./pages/Home'));\r\n// const Layout = React.lazy(() => import('./pages/layout/Layout'));\r\nconst Photo = React.lazy(() => import('./pages/fotografia/Galleria'));\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Suspense fallback={<CircularProgress />}>\r\n      <Router>\r\n        {/* <Layout> */}\r\n          <Route exact path=\"/\" render={() => <Home />} />\r\n          <Route path='/dev' render={() => <Dev />} />\r\n          <Route path='/photo' render={() => <Photo />} />\r\n        {/* </Layout> */}\r\n      </Router>\r\n    </React.Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/aqua.ab628ade.ttf\";","import AquaWeb from './aqua.ttf'\r\n\r\n\r\nconst aqua = {\r\n  fontFamily: 'AquaWeb',\r\n  fontStyle: 'semi-bold',\r\n  // fontDisplay: 'auto',\r\n  fontWeight: '600',\r\n  src: `\r\n    local('AquaWeb'),\r\n    url(${AquaWeb}) format('truetype')\r\n  `,\r\n  unicodeRange:\r\n    'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF',\r\n };\r\nexport default  aqua\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport acquaWeb from './fonts/importFont'\r\n\r\nconst thm = createMuiTheme({\r\n  typography: {\r\n    fontFamily: ['AquaWeb'].join(','),\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        '@font-face': [acquaWeb]\r\n      },\r\n    }\r\n  }\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={thm}>\r\n      <CssBaseline/>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}